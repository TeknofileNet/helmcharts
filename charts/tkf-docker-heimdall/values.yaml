# Default values for tkf-docker-heimdall.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

updateStrategy: {}
#  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 1
#    maxUnavailable: 0

podLabels: {}

securityContext:
  enabled: true
  runAsUser: 1001
  runAsGroup: 1001

image:
  registry: docker.io
  repository: teknofile/tkf-docker-heimdall
  pullPolicy: "Always"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

ingress:
  enabled: true
  className: ""
  tls:
    secretName: heimdall-ctn-tls

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

persistence:
  accessMode: 'ReadWriteOnce'
  enabled: true
  size: 10Gi

dnsName: heimdall.cosprings.teknofile.net

service:
  port: 80

containerEnv:
  tz: "America/Denver"
  puid: 1001
  pgid: 1001

persistence:
  ## @param persistence.enabled Enable persistence using PVC
  ##
  enabled: true
  ## @param persistence.storageClass PVC Storage Class for MediaWiki volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.existingClaim An Existing PVC name for MediaWiki volume
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  existingClaim: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size PVC Storage Request for MediaWiki volume
  ##
  size: 8Gi
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
