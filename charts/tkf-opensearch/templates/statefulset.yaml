apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tkf-opensearch.fullname" . }}
  labels:
    app.kubernetes.io/component: opensearch
    {{- include "tkf-opensearch.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: opensearch
      {{- include "tkf-opensearch.selectorLabels" . | nindent 6 }}
  replicas: 1
  serviceName: {{ include "tkf-opensearch.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tkf-opensearch.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: opensearch
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tkf-opensearch.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: elasticsearch
              containerPort: {{ .Values.containerPorts.elasticsearch }}
              protocol: TCP
            - name: esperf
              containerPort: {{ .Values.containerPorts.esperf}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: elasticdata
              mountPath: /usr/share/opensearch/data
          env:
            - name: cluster.name
              value: "opensearch-cluster"
            - name: node.name
              value: "opensearch"
            - name: bootstrap.memory_lock
              value: "true"
            - name: OPENSEARCH_JAVA_OPTS
              value: "-Xms2g -Xmx2g"
            - name: DISABLE_INSTALL_DEMO_CONFIG
              value: "true"
            - name: DISABLE_SECURITY_PLUGIN
              value: "true"
            - name: discovery.type
              value: "single-node"
                #- cluster.name=opensearch-cluster
                #- node.name=opensearch
                #- bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
                #- "OPENSEARCH_JAVA_OPTS=-Xms4g -Xmx4g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
                #- "DISABLE_INSTALL_DEMO_CONFIG=true" # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
                #- "DISABLE_SECURITY_PLUGIN=true" # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
                #- "discovery.type=single-node" # disables bootstrap checks that are enabled when network.host is set to a non-loopback address
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: elasticdata
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
