apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "tkf-docker-nzbget.fullname" . }}
  labels:
    app: {{ template  "tkf-docker-nzbget.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "tkf-docker-nzbget.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
{{- if .Values.updateStrategy }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
{{- end }}
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ template "tkf-docker-nzbget.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 6789
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
          env:
            - name: TZ
              value: "{{ .Values.containerEnv.tz }}"
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
          ports:
            - containerPort: 80
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ template "tkf-docker-nzbget.name" . }}-config
        - name: downloads
          persistentVolumeClaim:
            claimName: {{ template "tkf-docker-nzbget.name" . }}-downloads
