apiVersion: apps/v1
kind: Deployment
metadata:
  name: tkf-docker-registry
  labels:
    {{- include "tkf-docker-registry.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tkf-docker-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tkf-docker-registry.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 5000
          volumeMounts:
          - name: storage
            mountPath: /var/lib/registry
          - name: htpasswd
            mountPath: /auth
            readOnly: true
          env:
          - name: REGISTRY_AUTH
            value: htpasswd
          - name: REGISTRY_AUTH_HTPASSWD_REALM
            value: Docker Registry
          - name: REGISTRY_AUTH_HTPASSWD_PATH
            value: /auth/htpasswd
          - name: REGISTRY_STORAGE_DELETE_ENABLED
            value: "true"
        volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: docker-registry-pvc
        - name: htpasswd
          secret:
            secretName: docker-registry-htpasswd
